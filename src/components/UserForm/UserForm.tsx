import { FC, useState, useEffect, useRef } from 'react';
import { User } from '../../models/User';
import { IonInput, IonButton } from '@ionic/react';

import './UserForm.css';

interface UserFormProps {
  onAddUser: (user: User) => void;
}

const UserForm: FC<UserFormProps> = ({ onAddUser }) => {
  const isFormValid = useRef(false);
  const [name, setName] = useState('');
  const ionNameEl = useRef<HTMLIonInputElement>(null);

  /* for database Version 2
  const [email, setEmail] = useState('');
  const ionEmailEl = useRef<HTMLIonInputElement>(null);
  */

  const handleNameInput = (ev: Event) => {
    const value = (ev.target as HTMLIonInputElement).value as string;

    // Removes non alphanumeric characters
    const filteredValue = value.replace(/[^a-zA-Z0-9-' ']+/g, '');

    // Update both the state variable and
    //  the component to keep them in sync.
    setName(filteredValue);

    const inputCmp = ionNameEl.current;
    if (inputCmp !== null) {
      inputCmp.value = filteredValue;
    }

  };
  /* Version 2
  const handleEmailInput = (ev: Event) => {
    const value = (ev.target as HTMLIonInputElement).value as string;


    // Update both the state variable and
    // the component to keep them in sync.

    setEmail(value);

    const inputCmp = ionNameEl.current;
    if (inputCmp !== null) {
      inputCmp.value = value;
    }

  };
  */  

  const handleSubmit = () => {
    if (name /*&& email */) {
      const newUser: User = {
        id: Date.now(), // do not care about the id value (generated by sqlite)
        name,
        active: 1,
        /*email, //version 2 */
      };

      onAddUser(newUser);

      setName('');
      /*setEmail('');  // version 2 */
      isFormValid.current = false;
    }
  };
  const hasTwoWords = (input: string): boolean => {
    // Split the input string by spaces
    const words = input.trim().split(' ');

    // Check if there are exactly two non-empty words
    const isTwo = words.length === 2 && words.every(word => word !== '');
    return isTwo;
  }

  /* Version 2
  const isValidEmail = (email: string): boolean => {
    if(email.length === 0){
      return false;
    }
    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{1,}$/;
    const test = emailRegex.test(email);
    return test;
  }
  */
  useEffect(()=> {
    isFormValid.current = hasTwoWords(name)/* && isValidEmail(email) // version 2*/ ;
  }, [name /*, email // version 2*/]);

  return (
    <div className="UserForm">
      <IonInput
        ref={ionNameEl}
        type="text"
        value={name}
        onIonInput={handleNameInput}
        placeholder="Rose Miller"
      ></IonInput>
      {/* version 2
        <IonInput
          ref={ionEmailEl}
          type="email"
          value={email}
          onIonInput={handleEmailInput}
          placeholder="Email"
        ></IonInput>
      */}
      <IonButton expand="full" onClick={handleSubmit} disabled={!isFormValid.current}>
        Add User
      </IonButton>
    </div>
  )
};

export default UserForm;
